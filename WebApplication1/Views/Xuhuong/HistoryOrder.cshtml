@model IEnumerable<WebApplication1.Models.OrderItem>

@{
    ViewBag.Title = "HistoryOrder";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>HistoryOrder</h2>


<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Order.OrderDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Order.Customer.FullName)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.Gender)
            </th>*@
        @*<th>
                @Html.DisplayNameFor(model => model.Email)
            </th>*@
        <th>
            @Html.DisplayNameFor(model => model.Order.Customer.Phone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Order.Customer.Address)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Product.ProductName)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.Order.Discout_Code)
            </th>*@
        <th>
            @Html.DisplayNameFor(model => model.Quantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UnitPrice)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.Order.Status)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        // Kiểm tra email người dùng và trạng thái đơn hàng
        if (Session["UserEmail"]?.ToString().Trim().Equals(item.Order.Customer.Email.Trim(), StringComparison.OrdinalIgnoreCase) == true && item.Order.OrderStatus == 1)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Order.OrderDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Order.Customer.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Order.Customer.Phone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Order.Customer.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Product.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Order.Status)

                    @* Kiểm tra nếu trạng thái đơn hàng là "Pending" thì hiển thị nút xoá *@
                    @if (item.Order.Status.Trim().Equals("Pending", StringComparison.OrdinalIgnoreCase))
                            {
                                //onclick = "deleteOrderItem('@item.OrderItemID')"
                                <button type="button" class="btn btn-danger btn-sm ms-2" title="Xoá">
                            <i class="bi bi-trash3"></i>
                        </button>
                    }
                </td>
            </tr>
        }
    }


</table>
